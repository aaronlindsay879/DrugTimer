<div class="btn-group" role="group">
    @foreach (TabPage tabPage in Pages)
    {
        <button type="button"
                class="btn @GetButtonClass(tabPage)"
                @onclick=@( () => ActivatePage(tabPage) )>
            @tabPage.Text
        </button>
    }
</div>

<CascadingValue Value="this">
    @ChildContent
</CascadingValue>

@code {
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public List<TabPage> Pages { get; set; }

    public TabPage ActivePage { get; set; }

    /// <summary>
    /// Adds a page to the tab system
    /// </summary>
    /// <param name="tabPage">Page to add</param>
    internal void AddPage(TabPage tabPage)
    {
        Pages.Add(tabPage);

        //set default page to page number 2 (as options is number 1)
        if (Pages.Count == 2)
            ActivePage = tabPage;

        //ensure "+" tab is at end
        if (Pages.Any(x => x.Text == "+"))
        {
            var page = Pages.First(x => x.Text == "+");
            Pages.Remove(page);
            Pages.Add(page);
        }

        StateHasChanged();
    }

    /// <summary>
    /// Gets the class of the button for a given page (dependng on if it's selected or not)
    /// </summary>
    /// <param name="page">Page to check</param>
    /// <returns>A css class</returns>
    private string GetButtonClass(TabPage page)
    {
        return page == ActivePage ? "btn-primary" : "btn-secondary";
    }

    /// <summary>
    /// Sets the active page to the given page
    /// </summary>
    /// <param name="page">Page to activate</param>
    private void ActivatePage(TabPage page)
    {
        ActivePage = page;
    }
}
