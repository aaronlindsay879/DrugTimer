@using Microsoft.AspNetCore.SignalR.Client
@using DrugTimer.Shared
@using DrugTimer.Client.Data

<EditForm Model="_newDrug" OnValidSubmit="AddDrug" style="margin-top: 20px">
    <DataAnnotationsValidator />
    <div class="form-group" style="margin-left: 0px;">
        <label for="drugName">Drug name</label>
        <InputText id="drugName" class="form-control" @bind-Value="@_newDrug.Name" />
        <ValidationMessage For="@(() => _newDrug.Name)" />
        <small class="form-text text-muted">
            The name of the drug.
        </small>
    </div>
    <div class="form-group" style="margin-left: 0px;">
        <label for="drugTime">Time between doses</label>
        <InputNumber class="form-control" id="drugTime" @bind-Value="@_newDrug.TimeBetweenDoses" />
        <ValidationMessage For="@(() => _newDrug.TimeBetweenDoses)" />
        <small class="form-text text-muted">
            How many hours between doses. Leave empty (or 0) if drug doesn't fit that schedule.
        </small>
    </div>
    <div class="form-group" style="margin-left: 0px;">
        <label for="drugDoses">Expected doses a day</label>
        <InputNumber class="form-control" id="drugDoses" @bind-Value="@_newDrug.ExpectedDoses" />
        <ValidationMessage For="@(() => _newDrug.ExpectedDoses)" />
        <small class="form-text text-muted">
            How many doses are expected a day. Leave empty (or 0) if drug doesn't fit that schedule.
        </small>
    </div>
    <div class="form-group" style="margin-left: 0px;">
        <label for="drugInfo">Drug information</label>
        <InputText class="form-control" id="drugInfo" @bind-Value="@_newDrug.Info" />
        <small class="form-text text-muted">
            Any other drug information, such as dosage.
        </small>
    </div>
    @for (int i = 0; i < _drugDosages.Count; i++)
    {
        <div class="row">
            <div class="col">
                <input type="text" class="form-control" placeholder="Drug" @onchange="@(e => TextChange(e, i, true))">
            </div>
            <div class="col">
                <input type="text" class="form-control" placeholder="Dosage" @onchange="@(e => TextChange(e, i, false))">
            </div>
        </div>
    }
    <button class="btn btn-primary" type="submit">Add drug</button>
</EditForm>

@code {
    [Parameter] public HubConnection Connection { get; set; }

    private DrugInfo _newDrug;
    private List<DrugDosage> _drugDosages;

    protected override void OnInitialized()
    {
        //set up new drug options
        _newDrug = new DrugInfo();

        _drugDosages = new List<DrugDosage>();
        _drugDosages.Add(new DrugDosage("", ""));
    }

    /// <summary>
    /// Adds a drug to the database, fetching data from the add drug page
    /// </summary>
    private void AddDrug()
    {
        _newDrug.Dosages = _drugDosages.Where(x => !String.IsNullOrWhiteSpace(x.Name)).Select(x => new DosageInfo()
        {
            DrugName = _newDrug.Name,
            Drug = x.Name,
            Dosage = new Dosage(x.Dosage).Micrograms
        }).ToList();

        Connection.SendAsync("AddDrugInfo", _newDrug);
    }

    /// <summary>
    /// Method to handle text changes on drug dosage inputs
    /// </summary>
    /// <param name="e">Event Arguments</param>
    /// <param name="index">Index of drug dosage - starts from one :(</param>
    /// <param name="IsName">Whether the value is for dosage name - if false, it is for dosage value</param>
    private void TextChange(ChangeEventArgs e, int index, bool IsName)
    {
        if (IsName)
            _drugDosages[index - 1].Name = (string)e.Value;
        else
            _drugDosages[index - 1].Dosage = (string)e.Value;

        if (_drugDosages.All(x => !String.IsNullOrWhiteSpace(x.Dosage) && !String.IsNullOrWhiteSpace(x.Name)))
            _drugDosages.Add(new DrugDosage("", ""));
    }
}