@using DrugTimer.Shared
@using Microsoft.AspNetCore.SignalR.Client  

<div class="row">
    @foreach (DrugInfo info in DrugInfos)
    {
        <div class="col-lg-4 col-md-6 col-sm-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@info.Name</h5>
                    <EditForm Model="info" OnValidSubmit="(() => UpdateDrugInfo(info))">
                        <div class="form-group form-check" style="margin-left: 0px;">
                            <InputCheckbox class="form-check-input" id="@("notifications-" + info.Name)" @bind-Value="@info.DrugSettings.NotificationsEnabled" />
                            <label class="form-check-label" for="notifications-@(info.Name)">Enable Notifications</label>
                            <small class="form-text text-muted">
                                Not yet implemented.
                            </small>
                        </div>
                        <div class="form-group form-check" style="margin-left: 0px;">
                            <InputCheckbox class="form-check-input" id="@("webHook-" + info.Name)" @bind-Value="@info.DrugSettings.DiscordWebHookEnabled" />
                            <label class="form-check-label" for="webHook-@info.Name">Enable Discord Webhook Integration</label>
                        </div>
                        <div class="form-group" style="margin-left: 0px;">
                            <label for="webHookUrl-@info.Name">Discord Webhook Url</label>
                            <InputText class="form-control" id="@("webHookUrl-" + info.Name)" @bind-Value="@info.DrugSettings.DiscordWebHook" />
                            <small class="form-text text-muted">
                                The url to use for webhook integration.
                            </small>
                        </div>
                        <button class="btn btn-primary" type="submit">Save data</button>
                    </EditForm>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public List<DrugInfo> DrugInfos { get; set; }
    [Parameter] public HubConnection Connection { get; set; }

    /// <summary>
    /// Tells the server to update the given DrugInfo with new data
    /// </summary>
    /// <param name="info">DrugInfo to update</param>
    private async void UpdateDrugInfo(DrugInfo info) => await Connection.SendAsync("UpdateDrugInfo", info);
}
