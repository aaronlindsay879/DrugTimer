@using Microsoft.AspNetCore.SignalR.Client 
@using DrugTimer.Shared 

<div>
    <EditForm Model="_localDrugEntry" OnValidSubmit="Save">
        <DataAnnotationsValidator />
        <div class="form-group" style="margin-left: 0px;">
            <label for="count">Entry count</label>
            <InputNumber step="@Settings.IncrementStep" min="0" id="count" class="form-control" @bind-Value="@_localDrugEntry.Count" />
            <ValidationMessage For="@(() => _localDrugEntry.Count)" />
        </div>
        <div class="form-group" style="margin-left: 0px">
            <label for="notes">Notes</label>
            <InputTextArea class="form-control" id="notes" @bind-Value="@_localDrugEntry.Notes" style="resize: both; width: 400px" />
            <ValidationMessage For="@(() => _localDrugEntry.Notes)" />
        </div>
        <button type="submit" class="btn btn-primary" style="float: right">Save</button>
    </EditForm>
</div>

@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }
    [Parameter] public HubConnection Connection { get; set; }
    [Parameter] public DrugEntry Entry { get; set; }
    [Parameter] public Settings Settings { get; set; }

    DrugEntry _localDrugEntry;

    protected override void OnInitialized()
    {
        _localDrugEntry = new DrugEntry()
        {
            DrugGuid = Entry.DrugGuid,
            EntryGuid = Entry.EntryGuid,
            Time = Entry.Time,
            Count = Entry.Count,
            Notes = Entry.Notes
        };
    }

    private async void Save()
    {
        await Connection.SendAsync("UpdateDrugEntry", _localDrugEntry);

        await BlazoredModal.Close(ModalResult.Ok(true));
    }
}